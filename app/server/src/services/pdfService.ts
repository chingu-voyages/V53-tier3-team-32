// src/services/pdfService.ts
import PDFDocument from 'pdfkit';
import { Response } from 'express';

interface MenuItem {
  day: string;
  dishes: string[];
}

interface WeeklyMenu {
  startDate: Date;
  endDate: Date;
  weeklyMenu: MenuItem[];
}

class PdfService {
  generateMenuPdf(menu: WeeklyMenu, res: Response): void {
    const doc = new PDFDocument();
    
    // Set response headers
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', 'attachment; filename=weekly-menu.pdf');
    
    doc.pipe(res);

    // Add title
    doc.fontSize(24)
       .font('Helvetica-Bold')
       .text('Weekly Menu', { align: 'center' });
    doc.moveDown();

    // Add date range
    doc.fontSize(12)
       .font('Helvetica')
       .text(`From: ${menu.startDate.toLocaleDateString()} To: ${menu.endDate.toLocaleDateString()}`, 
             { align: 'center' });
    doc.moveDown(2);

    // Add menu items
    menu.weeklyMenu.forEach((dayMenu) => {
      // Day header
      doc.fontSize(16)
         .font('Helvetica-Bold')
         .text(dayMenu.day);
      doc.moveDown(0.5);

      // Meals
      const mealTypes = ['Breakfast', 'Lunch', 'Dinner'];
      mealTypes.forEach((mealType, index) => {
        doc.fontSize(12)
           .font('Helvetica-Bold')
           .text(`${mealType}: `, { continued: true })
           .font('Helvetica')
           .text(dayMenu.dishes[index] || 'Day Off');
      });

      doc.moveDown(1);
    });

    // Footer
    doc.fontSize(10)
       .font('Helvetica')
       .text('Generated by Meal Planner App', { align: 'center' });

    doc.end();
  }
}

export const pdfService = new PdfService();